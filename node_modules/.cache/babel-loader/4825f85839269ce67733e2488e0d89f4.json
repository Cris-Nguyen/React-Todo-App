{"ast":null,"code":"var _jsxFileName = \"/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { addTodo, updateTodo, removeTodo, completeTodo } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  /* const addTodo = todo => {\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\n          return;\n      }\n      const subTodos = [todo, ...todos];\n      setTodos(subTodos);      \n  }\n   const updateTodo = (todoId, newValue) => {\n      if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n          return;\n      }\n      setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  }\n   const removeTodo = id => {\n      const removeArr = [...todos].filter(todo => todo.id !== id);\n      setTodos(removeArr);\n  }\n   const completeTodo = id => {\n      let updatedTodos = todos.map(todo => {\n          if (todo.id === id) {\n              todo.isComplete = !todo.isComplete;\n          }\n          return todo;\n      });\n      setTodos(updatedTodos);\n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Daily tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      updateTodo: updateTodo,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","addTodo","updateTodo","removeTodo","completeTodo","TodoList","todos","setTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,UAA7B,EAAyCC,YAAzC,QAA4D,kBAA5D;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEK,KADX;AAEI,MAAA,UAAU,EAAEJ,UAFhB;AAGI,MAAA,YAAY,EAAEE,YAHlB;AAII,MAAA,UAAU,EAAED;AAJhB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7CQE,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport {addTodo, updateTodo, removeTodo, completeTodo} from \"../redux/actions\"\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    /* const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n        const subTodos = [todo, ...todos];\n        setTodos(subTodos);      \n    }\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    }\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n        setTodos(removeArr);\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    } */\n\n    return (\n        <div>\n            <h1>Daily tasks</h1>\n            <TodoForm onSubmit={addTodo} />\n            <Todo \n                todos={todos}\n                updateTodo={updateTodo}\n                completeTodo={completeTodo}\n                removeTodo={removeTodo}\n            />    \n        </div>\n    )\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}