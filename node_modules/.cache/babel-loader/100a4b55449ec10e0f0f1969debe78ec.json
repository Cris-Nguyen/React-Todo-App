{"ast":null,"code":"var _jsxFileName = \"/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\nimport { addTodo, updateTodo, removeTodo, completeTodo } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo() {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"mB/y++saR7gFUN05hWxwjFwFdCc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","TodoForm","addTodo","updateTodo","removeTodo","completeTodo","Todo","edit","setEdit","id","value","submitUpdate","todos","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,YAA1C,QAA8D,kBAA9D;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BP,IAAAA,UAAU,CAACI,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV;AACAF,IAAAA,OAAO,CAAC;AACLC,MAAAA,EAAE,EAAE,IADC;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAD,CAAP;AAIH,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOC,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAChB,UADA;AAAA,4BAEI;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACL,EAAN,CAA9C;AAAA,gBACKK,IAAI,CAACG;AADV,OAAUH,IAAI,CAACL,EAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AACI,QAAA,OAAO,EAAE,MAAML,UAAU,CAACU,IAAI,CAACL,EAAN,CAD7B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEK,IAAI,CAACL,EAAV;AAAcC,UAAAA,KAAK,EAAEI,IAAI,CAACG;AAA1B,SAAD,CAD1B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,KACiBF,KADjB;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAkBH;;GApCQT,I;;KAAAA,I;AAsCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { TiEdit } from 'react-icons/ti'\nimport TodoForm from './TodoForm';\nimport { addTodo, updateTodo, removeTodo, completeTodo } from \"../redux/actions\"\n\nfunction Todo() {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n    \n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n           id: null,\n           value: '' \n        });\n    }\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\n    }\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : \n        'todo-row'} key={index}>\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className=\"icons\">\n                <RiCloseCircleLine \n                    onClick={() => removeTodo(todo.id)}\n                    className='delete-icon'\n                />\n                <TiEdit \n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\n                    className='edit-icon'\n                />\n            </div>\n        </div>\n    ));\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}