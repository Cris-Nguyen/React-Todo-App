{"ast":null,"code":"var _jsxFileName = \"/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { dispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /* props.onSubmit({\n        id: Math.floor(Math.random() * 10000),\n        text: input\n    }); */\n\n    const action = addTodo({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    dispatch(action);\n    console.log('Called');\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add an update\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add a todo\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        className: \"todo-input\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","dispatch","addTodo","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","action","id","Math","floor","random","text","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACM,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACG,cAAF;AACA;AACR;AACA;AACA;;AACQ,UAAMC,MAAM,GAAGf,OAAO,CAAC;AACrBgB,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADiB;AAErBC,MAAAA,IAAI,EAAEjB;AAFe,KAAD,CAAtB;AAIAJ,IAAAA,QAAQ,CAACgB,MAAD,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAlB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAbD;;AAeA,sBACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAES,YAAtC;AAAA,cACGX,KAAK,CAACG,IAAN,gBACC;AAAA,8BACA;AACE,QAAA,WAAW,EAAC,eADd;AAEE,QAAA,KAAK,EAAEF,KAFT;AAGE,QAAA,QAAQ,EAAEO,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,GAAG,EAAEH,QALP;AAME,QAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAA+B,QAAA,SAAS,EAAC,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA,oBADD,gBAeC;AAAA,8BACA;AACE,QAAA,WAAW,EAAC,YADd;AAEE,QAAA,KAAK,EAAEV,KAFT;AAGE,QAAA,QAAQ,EAAEO,YAHZ;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,YALZ;AAME,QAAA,GAAG,EAAEH;AANP;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCH;;GA7DQZ,Q;;KAAAA,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { dispatch } from \"react-redux\"\nimport { addTodo } from \"../redux/actions\"\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    });\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        /* props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        }); */\n        const action = addTodo({\n          id: Math.floor(Math.random() * 10000),\n          text: input\n        })\n        dispatch(action);\n        console.log('Called');\n        setInput('');\n    }\n\n    return (\n      <form className=\"todo-form\" onSubmit={handleSubmit}>\n        {props.edit ? (\n          <>\n          <input\n            placeholder='Add an update'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n          </>\n        ) : (\n          <>\n          <input\n            placeholder='Add a todo'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n          </>\n        )}\n      </form>\n  )\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}