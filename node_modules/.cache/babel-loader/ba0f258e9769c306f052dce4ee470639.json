{"ast":null,"code":"var _jsxFileName = \"/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react'\nimport React from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { connect } from \"react-redux\";\nimport { addTodo, updateTodo, removeTodo, completeTodo } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  const state = useSelector(state => state.todos.addTodo);\n  console.log('state', state); // const [todos, setTodos] = useState([]);\n\n  /* const addTodo = todo => {\n      if (!todo.text || /^\\s*$/.test(todo.text)) {\n          return;\n      }\n      const subTodos = [todo, ...todos];\n      setTodos(subTodos);      \n  }\n   const updateTodo = (todoId, newValue) => {\n      if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n          return;\n      }\n      setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  }\n   const removeTodo = id => {\n      const removeArr = [...todos].filter(todo => todo.id !== id);\n      setTodos(removeArr);\n  }\n   const completeTodo = id => {\n      let updatedTodos = todos.map(todo => {\n          if (todo.id === id) {\n              todo.isComplete = !todo.isComplete;\n          }\n          return todo;\n      });\n      setTodos(updatedTodos);\n  } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Daily tasks App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: this.state.todos,\n      updateTodo: updateTodo,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n} // export default TodoList;\n\n\n_s(TodoList, \"dFAAPDNEsxQMpRpiSMZXJjfPktw=\", true);\n\n_c = TodoList;\nexport default connect(null, {\n  addTodo,\n  updateTodo,\n  removeTodo,\n  completeTodo\n})(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/TodoList.js"],"names":["React","TodoForm","Todo","connect","addTodo","updateTodo","removeTodo","completeTodo","TodoList","props","state","useSelector","todos","console","log"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,YAA1C,QAA8D,kBAA9D;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAMC,KAAK,GAAGC,WAAW,CAACD,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAYR,OAAtB,CAAzB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB,EAFqB,CAGrB;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIQ,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AACI,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWE,KADtB;AAEI,MAAA,UAAU,EAAEP,UAFhB;AAGI,MAAA,YAAY,EAAEE,YAHlB;AAII,MAAA,UAAU,EAAED;AAJhB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYP,C,CAED;;;GAhDSE,Q;;KAAAA,Q;AAiDT,eAAeL,OAAO,CAClB,IADkB,EAElB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,UAAvB;AAAmCC,EAAAA;AAAnC,CAFkB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["// import React, { useState } from 'react'\nimport React from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\nimport { connect } from \"react-redux\"\nimport { addTodo, updateTodo, removeTodo, completeTodo } from \"../redux/actions\"\n\nfunction TodoList(props) {\n    const state = useSelector(state => state.todos.addTodo);\n    console.log('state', state);\n    // const [todos, setTodos] = useState([]);\n\n    /* const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n        const subTodos = [todo, ...todos];\n        setTodos(subTodos);      \n    }\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    }\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n        setTodos(removeArr);\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    } */\n        return (\n            <div>\n                <h1>Daily tasks App</h1>\n                <TodoForm onSubmit={addTodo} />\n                <Todo \n                    todos={this.state.todos}\n                    updateTodo={updateTodo}\n                    completeTodo={completeTodo}\n                    removeTodo={removeTodo}\n                />    \n            </div>\n        )\n}\n\n// export default TodoList;\nexport default connect(\n    null,\n    { addTodo, updateTodo, removeTodo, completeTodo }\n)(TodoList);"]},"metadata":{},"sourceType":"module"}