{"ast":null,"code":"var _jsxFileName = \"/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo\n}) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  const dispatch = useDispatch();\n\n  const submitUpdate = value => {\n    const action = updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n    return action;\n  };\n\n  const handleCompleteTodo = id => {\n    const action = completeTodo(id);\n    dispatch(action);\n  };\n\n  const handleRemoveTodo = id => {\n    const action = removeTodo(id);\n    dispatch(action);\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleCompleteTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => handleRemoveTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this));\n}\n\n_s(Todo, \"CeClBhwtp2irzL71qBR8nRZXE5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/crisnguyen/workspace/Learn Technologies/Web Development/React-Todo-App/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","TodoForm","useDispatch","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","dispatch","submitUpdate","action","handleCompleteTodo","handleRemoveTodo","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA;AAAlC,CAAd,EAA6D;AAAA;;AACzD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAC7BY,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;AAKA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,YAAY,GAAGF,KAAK,IAAI;AAC1B,UAAMG,MAAM,GAAGP,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAzB;AACAF,IAAAA,OAAO,CAAC;AACLC,MAAAA,EAAE,EAAE,IADC;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAD,CAAP;AAIA,WAAOG,MAAP;AACH,GAPD;;AASA,QAAMC,kBAAkB,GAAIL,EAAD,IAAQ;AAC/B,UAAMI,MAAM,GAAGT,YAAY,CAACK,EAAD,CAA3B;AACAE,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAHD;;AAKA,QAAME,gBAAgB,GAAIN,EAAD,IAAQ;AAC7B,UAAMI,MAAM,GAAGR,UAAU,CAACI,EAAD,CAAzB;AACAE,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAHD;;AAKA,MAAIN,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEK;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOT,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAChB,UADA;AAAA,4BAEI;AAAmB,MAAA,OAAO,EAAE,MAAML,kBAAkB,CAACG,IAAI,CAACR,EAAN,CAApD;AAAA,gBACKQ,IAAI,CAACG;AADV,OAAUH,IAAI,CAACR,EAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI,QAAC,iBAAD;AACI,QAAA,OAAO,EAAE,MAAMM,gBAAgB,CAACE,IAAI,CAACR,EAAN,CADnC;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAAEQ,IAAI,CAACR,EAAV;AAAcC,UAAAA,KAAK,EAAEO,IAAI,CAACG;AAA1B,SAAD,CAD1B;AAEI,QAAA,SAAS,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,KACiBF,KADjB;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAkBH;;GAjDQhB,I;UAMYD,W;;;KANZC,I;AAmDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { RiCloseCircleLine } from 'react-icons/ri'\nimport { TiEdit } from 'react-icons/ti'\nimport TodoForm from './TodoForm';\nimport { useDispatch } from \"react-redux\"\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const dispatch = useDispatch();\n\n    const submitUpdate = value => {\n        const action = updateTodo(edit.id, value);\n        setEdit({\n           id: null,\n           value: '' \n        });\n        return action;\n    }\n\n    const handleCompleteTodo = (id) => {\n        const action = completeTodo(id);\n        dispatch(action);\n    }\n\n    const handleRemoveTodo = (id) => {\n        const action = removeTodo(id);\n        dispatch(action);\n    }\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\n    }\n\n    return todos.map((todo, index) => (\n        <div className={todo.isComplete ? 'todo-row complete' : \n        'todo-row'} key={index}>\n            <div key={todo.id} onClick={() => handleCompleteTodo(todo.id)}>\n                {todo.text}\n            </div>\n            <div className=\"icons\">\n                <RiCloseCircleLine \n                    onClick={() => handleRemoveTodo(todo.id)}\n                    className='delete-icon'\n                />\n                <TiEdit \n                    onClick={() => setEdit({id: todo.id, value: todo.text})}\n                    className='edit-icon'\n                />\n            </div>\n        </div>\n    ));\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}